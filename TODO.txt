Things still to be done, ideas for improvement:

- Do we need to run first as an xfilter, then as a to?

- Work out how to sensibly bounce/forward the email if there's a problem.
  (Probably solved already.)

- Handle emails without a file number.  (Flag them as requiring action and
  bounce them to an administrator.)

- Save email headers in a file.

- If we had to make up a file name, the extension is probably wrong. Check the
  mime type of the content and change the extension if required.  Useful perl
  modules might be File::Mimeinfo::Magic and MIME::Types.

- Add a database tidying routine to run, say, once per month, which will go
  through the database and delete entries for files which no longer exist.

- Add a database pre-seeding routing to traverse a filesystem, checksum all of
  the files, and add them to the database.  It would need to use the file's
  timestamp as the add to database time - that way older files would be
  treated as older (not that this is really important).

- Need to think about how spam will be handled.

- Save statistics for emails:
	senders (domain & user)
	recipients (domain & user)
	project numbers
	size
	date

- Change debug/error to warn/die and provide signal handlers that reformat.
  Or just switch to log4perl.

- Optional feature to link all correspondence into a single directory with no
  duplication of files if an identical copy is already there.

