#!/usr/bin/perl -Tw
#
# Script to accept email messages on standard input and file all of their
# parts in a filing system, deduplicating each of the MIME parts by hard
# linking to another identical file, if one exists.
#
# There should never be any need to run this directly except for debugging.
# See .mailfilter for normal usage.
#
# Copyright (c) 2011 Lowenstein & Stumpo <http://www.lowstump.com.au/>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Author:	Paul Gear <github@libertysys.com.au>
#

use strict;

use Email::Address;
use Email::MIME;
use Getopt::Long;

use lib ".";

# functions which may need customising on local sites
require "site.pl";

use MailArchive::Archive;
use MailArchive::Log;
use MailArchive::Util;

MailArchive::Log->init($0);

my $split = 1;
my $debug = getdebug();

my $result = GetOptions(
	#"length=i"	=> \$length,    # numeric
	#"file=s"	=> \$data,      # string
	"debug"		=> \$debug,	# boolean
	"split"		=> \$split,	# split the email into MIME parts -
					# if false, just save the whole file
);

setdebug($debug);

my $basedir = shift @ARGV;
my $projnum = shift @ARGV;

# check and untaint base directory
$basedir = validate_directory($basedir);

# read our input email
my $email = read_stdin();

process_email($basedir, $projnum, $email, 0, undef);

